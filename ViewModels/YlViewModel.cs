// ============================================================================
// 
// ゆかりすたー NEBULA の基底用 ViewModel
// 
// ============================================================================

// ----------------------------------------------------------------------------
// スプラッシュウィンドウ ViewModel 以外のすべての ViewModel に適用する
// ----------------------------------------------------------------------------

using Livet;

using System;
using System.Windows.Input;

namespace YukaLister.ViewModels
{
	public class YlViewModel : ViewModel
	{
		// ====================================================================
		// コンストラクター・デストラクター
		// ====================================================================

		// --------------------------------------------------------------------
		// コンストラクター
		// --------------------------------------------------------------------
		public YlViewModel()
		{
		}

		// ====================================================================
		// public プロパティー
		// ====================================================================

		// --------------------------------------------------------------------
		// View 通信用のプロパティー
		// --------------------------------------------------------------------

		// ウィンドウタイトル（デフォルトが null だと実行時にエラーが発生するので Empty にしておく）
		private String _title = String.Empty;
		public String Title
		{
			get => _title;
			set => RaisePropertyChangedIfSet(ref _title, value);
		}

		// カーソル
		private Cursor? _cursor;
		public Cursor? Cursor
		{
			get => _cursor;
			set => RaisePropertyChangedIfSet(ref _cursor, value);
		}

		// --------------------------------------------------------------------
		// 一般のプロパティー
		// --------------------------------------------------------------------

		// OK ボタン・削除ボタン等、キャンセル以外のボタンが押されて閉じられた
		public Boolean IsOk { get; protected set; }

		// ====================================================================
		// public メンバー関数
		// ====================================================================

		// --------------------------------------------------------------------
		// 初期化
		// --------------------------------------------------------------------
		public virtual void Initialize()
		{
		}
	}
}
