<Window x:Class="YukaLister.Views.EditMasterWindows.EditMasterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:msm="clr-namespace:YukaLister.Models.SharedMisc"
        xmlns:sb="clr-namespace:Shinta.Behaviors"
        xmlns:v="clr-namespace:YukaLister.Views"
        xmlns:vm="clr-namespace:YukaLister.ViewModels"
        xmlns:vmemw="clr-namespace:YukaLister.ViewModels.EditMasterWindowViewModels"
        xmlns:vmw="clr-namespace:YukaLister.Views.MiscWindows"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" ShowInTaskbar="False" ResizeMode="NoResize" SizeToContent="WidthAndHeight" >

    <Window.DataContext>
        <vmemw:EditMasterWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsCascade="True" MinimizeBox="False"/>
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_WINDOW_CLOSE}" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_INPUT_ID_PREFIX_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vmw:InputIdPrefixWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <StackPanel Orientation="Horizontal" Margin="20,20,20,0">
            <Label Content="{Binding IdCaption}" Target="{Binding ElementName=ComboBoxId}" Width="100" HorizontalContentAlignment="Right"/>
            <ComboBox Name="ComboBoxId" ItemsSource="{Binding Masters}" SelectedItem="{Binding SelectedMaster}" DisplayMemberPath="Id" VerticalAlignment="Center" Width="300" materialDesign:ComboBoxAssist.ClassicMode="True" />
            <Label Content="{Binding IdInfo}" Margin="10,0,0,0" Foreground="Red"/>
        </StackPanel>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,20,0,0"/>
        <StackPanel Orientation="Horizontal" Margin="20,20,20,0">
            <Label Content="フリガナ (_F)：" Target="{Binding ElementName=TextBoxRuby}" Width="100" HorizontalContentAlignment="Right"/>
            <TextBox Name="TextBoxRuby" Text="{Binding Ruby}" VerticalAlignment="Center" Width="300"/>
            <Label Content="検索ワード (_W)：" Target="{Binding ElementName=TextBoxKeyword}" Width="120" HorizontalContentAlignment="Right"/>
            <TextBox Name="TextBoxKeyword" Text="{Binding Keyword}" ToolTip="{Binding KeywordHint}" ToolTipService.ShowDuration="{x:Static msm:YlConstants.TOOL_TIP_LONG_DURATION}" materialDesign:HintAssist.Hint="{Binding ElementName=TextBoxKeyword, Path=ToolTip}" VerticalAlignment="Center" Width="450" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="20,20,20,0">
            <Label Content="{Binding NameCaption}" Target="{Binding ElementName=TextBoxName}" Width="100" HorizontalContentAlignment="Right"/>
            <TextBox Name="TextBoxName" Text="{Binding Name}" ToolTip="{Binding NameHint}" ToolTipService.ShowDuration="{x:Static msm:YlConstants.TOOL_TIP_LONG_DURATION}" materialDesign:HintAssist.Hint="{Binding ElementName=TextBoxName, Path=ToolTip}" VerticalAlignment="Center" Width="300" />
        </StackPanel>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,20,0,0"/>
        <DockPanel Margin="20" LastChildFill="False" >
            <Button Content="削除 (_D)" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="100" Height="Auto" Padding="4" Command="{Binding ButtonDeleteClickedCommand}" />
            <Button Content="キャンセル" Style="{StaticResource MaterialDesignRaisedLightButton}" IsCancel="True" Width="100" Height="Auto" Padding="4" DockPanel.Dock="Right"/>
            <Button Content="_OK" Height="Auto" IsDefault="True" Width="100" Command="{Binding ButtonOkClickedCommand}" sb:IsFocusedAttachedBehavior.IsFocused="{Binding IsButtonOkFocused}" DockPanel.Dock="Right" Margin="0,0,20,0" />
        </DockPanel>
    </StackPanel>

</Window>