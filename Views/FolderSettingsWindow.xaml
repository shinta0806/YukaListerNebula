<Window x:Class="YukaLister.Views.FolderSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mvc="clr-namespace:YukaLister.Models.ValueConverters"
        xmlns:sb="clr-namespace:Shinta.Behaviors"
        xmlns:v="clr-namespace:YukaLister.Views"
        xmlns:vm="clr-namespace:YukaLister.ViewModels"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" ShowInTaskbar="False" ResizeMode="CanResizeWithGrip" Width="900" Height="720" >

    <Window.Resources>
        <mvc:BooleanInvertConverter x:Key="BooleanInvertConverter"/>
        <mvc:FolderSettingsStatusToDescriptionConverter x:Key="FolderSettingsStatusToDescriptionConverter"/>
    </Window.Resources>

    <Window.DataContext>
        <vm:FolderSettingsWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsCascade="True" MinimizeBox="False"/>
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

    </behaviors:Interaction.Triggers>

    <DockPanel>
        <StackPanel Margin="20,15,20,0" Orientation="Horizontal" DockPanel.Dock="Top">
            <Label Content="設定対象フォルダー：" Width="120" HorizontalContentAlignment="Right"/>
            <Label Content="{Binding TargetPath}"/>
        </StackPanel>
        <StackPanel Margin="140,0,20,0" Orientation="Horizontal" DockPanel.Dock="Top">
            <Label Content="{Binding SettingsFileStatus, Converter={StaticResource FolderSettingsStatusToDescriptionConverter}}"/>
            <Label >
                <Hyperlink Command="{Binding HelpClickedCommand}" CommandParameter="FolderSettei" >
                    <TextBlock Text="詳細情報" />
                </Hyperlink>
            </Label>
        </StackPanel>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,10,0,0" DockPanel.Dock="Top"/>
        <TabControl x:Name="TabControlRules" Height="265" Margin="10,10,10,0" DockPanel.Dock="Top" IsEnabled="{Binding IsExcluded, Converter={StaticResource BooleanInvertConverter}}" >
            <TabItem Header="ファイル命名規則">
                <DockPanel>
                    <Label Content="このフォルダー内にあるニコカラファイルの命名規則 (_R)　※拡張子は除きます" Margin="20,10,0,0" DockPanel.Dock="Top"/>
                    <DockPanel DockPanel.Dock="Top" Margin="20,0">
                        <Button x:Name="ButtonVar" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="タグ" Width="50" Height="25" DockPanel.Dock="Right" Cursor="Hand" >
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Click">
                                    <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=ButtonVar}" PropertyName="IsOpen" Value="True"/>
                                    <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=ButtonVar}" PropertyName="PlacementTarget" Value="{Binding ElementName=ButtonVar, Mode=OneWay}"/>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                            <Button.ContextMenu>
                                <ContextMenu ItemsSource="{Binding ContextMenuButtonVarItems}">
                                </ContextMenu>
                            </Button.ContextMenu>
                            <materialDesign:PackIcon Kind="Tag" Height="18" Width="18" />
                        </Button>
                        <TextBox x:Name="TextBoxFileNameRule" materialDesign:HintAssist.Hint="ここに命名規則を入力して下さい。右側のタグボタンでタグを追加できます。" VerticalAlignment="Center" Margin="0,0,10,0" Text="{Binding FileNameRule, UpdateSourceTrigger=PropertyChanged}" sb:IsFocusedAttachedBehavior.IsFocused="{Binding IsFileNameRuleFocused}" >
                            <behaviors:Interaction.Behaviors>
                                <l:TextBoxBindingSupportBehavior SelectionStart="{Binding FileNameRuleSelectionStart}" SelectionLength="{Binding FileNameRuleSelectionLength}" />
                            </behaviors:Interaction.Behaviors>
                        </TextBox>
                    </DockPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,0">
                        <Button x:Name="ButtonAddFileNameRule" Content="↓ 追加 (_1)" Height="Auto" Width="100" ToolTip="命名規則を追加" Command="{Binding ButtonAddFileNameRuleClickedCommand}" />
                        <Button x:Name="ButtonReplaceFileNameRule" Content="↓ 置換 (_2)" Margin="20,0,0,0" Height="Auto" Width="100" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="選択されている命名規則を置換"  Command="{Binding ButtonReplaceFileNameRuleClickedCommand}"/>
                        <Button x:Name="ButtonDeleteFileNameRule" Content="× 削除 (_3)" Margin="20,0,0,0" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="選択されている命名規則を削除" Command="{Binding ButtonDeleteFileNameRuleClickedCommand}"/>
                    </StackPanel>
                    <DockPanel Margin="20,10,20,20" DockPanel.Dock="Top">
                        <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center">
                            <Button x:Name="ButtonUpFileNameRule" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="命名規則を上へ" Width="50" Height="25" Command="{Binding ButtonUpFileNameRuleClickedCommand}">
                                <materialDesign:PackIcon Kind="ArrowUpThick" Height="18" Width="18" />
                            </Button>
                            <Button x:Name="ButtonDownFileNameRule" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="命名規則を下へ" Width="50" Height="25" Margin="0,10,0,0" Command="{Binding ButtonDownFileNameRuleClickedCommand}">
                                <materialDesign:PackIcon Kind="ArrowDownThick" Height="18" Width="18" />
                            </Button>
                        </StackPanel>
                        <ListBox x:Name="ListBoxFileNameRules" Margin="0,0,10,0" Grid.RowSpan="2" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding FileNameRules}" SelectedItem="{Binding SelectedFileNameRule}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter Content="{Binding}" RecognizesAccessKey="False" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </DockPanel>
            </TabItem>
            <TabItem Header="固定値項目">
                <DockPanel>
                    <Label Content="このフォルダー内にあるニコカラファイルに一律で適用する値" Margin="20,10,0,0" DockPanel.Dock="Top"/>
                    <Grid VerticalAlignment="Top" DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="項目 (_K)：" HorizontalAlignment="Right"/>
                        <ComboBox x:Name="ComboBoxFolderNameRuleName" Grid.Column="1" Margin="0,0,20,0" VerticalAlignment="Center" ItemsSource="{Binding FolderNameRuleNames}" SelectedItem="{Binding SelectedFolderNameRuleName}"/>
                        <Label Grid.Column="2" Content="値 (_V)：" HorizontalAlignment="Right"/>
                        <ComboBox x:Name="ComboBoxFolderNameRuleValue" Grid.Column="3" Margin="0,0,20,0" VerticalAlignment="Center" ItemsSource="{Binding FolderNameRuleValues}" SelectedItem="{Binding SelectedFolderNameRuleValue}" Visibility="{Binding SelectedFolderNameRuleValueVisibility}" />
                        <TextBox x:Name="TextBoxFolderNameRuleValue" Grid.Column="3" Margin="0,0,20,0" VerticalAlignment="Center" Text="{Binding InputFolderNameRuleValue, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding InputFolderNameRuleValueVisibility}" />
                    </Grid>
                    <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,10,0,0">
                        <Button x:Name="ButtonAddFolderNameRule" Content="↓ 追加 (_4)" Height="Auto" Width="100" ToolTip="固定値項目を追加" Command="{Binding ButtonAddFolderNameRuleClickedCommand}"/>
                        <Button x:Name="ButtonDeleteFolderNameRule" Content="× 削除 (_5)" Margin="20,0,0,0" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="選択されている固定値項目を削除" Width="100" Command="{Binding ButtonDeleteFolderNameRuleClickedCommand}" />
                    </StackPanel>
                    <DockPanel Margin="20,10,20,20" DockPanel.Dock="Top">
                        <StackPanel DockPanel.Dock="Right" VerticalAlignment="Center">
                            <Button x:Name="ButtonUpFolderNameRule" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="固定値項目を上へ" Width="50" Height="25" Command="{Binding ButtonUpFolderNameRuleClickedCommand}" >
                                <materialDesign:PackIcon Kind="ArrowUpThick" Height="18" Width="18" />
                            </Button>
                            <Button x:Name="ButtonDownFolderNameRule" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="固定値項目を下へ" Width="50" Height="25" Margin="0,10,0,0" Command="{Binding ButtonDownFolderNameRuleClickedCommand}" >
                                <materialDesign:PackIcon Kind="ArrowDownThick" Height="18" Width="18" />
                            </Button>
                        </StackPanel>
                        <ListBox x:Name="ListBoxFolderNameRules" Margin="0,0,10,0" Grid.RowSpan="2" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding FolderNameRules}" SelectedItem="{Binding SelectedFolderNameRule}" />
                    </DockPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
        <DockPanel Margin="20,10,20,0" LastChildFill="False" DockPanel.Dock="Top">
            <Button x:Name="ButtonPreview" Content="解析結果確認 (_C)" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="フォルダー内のファイルの名前がどのように解析されるか確認できます。" Width="140" Padding="4" Command="{Binding ButtonPreviewClickedCommand}" />
            <ProgressBar Height="Auto" Margin="20,5,0,5" IsIndeterminate="True" Width="140" Visibility="{Binding ProgressBarPreviewVisibility}"/>
            <Button x:Name="ButtonEditInfo" Content="名称の編集 (_E)" Margin="0" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="選択したファイルのタイアップ名・楽曲名を編集します" Width="140" DockPanel.Dock="Right" Command="{Binding ButtonEditInfoClickedCommand}" />
            <Button x:Name="ButtonJump" Content="未登録検出 (_F)" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="タイアップ名・楽曲名が楽曲情報データベースに未登録なファイルを検出します" Width="140" DockPanel.Dock="Right" Margin="0,0,20,0" Command="{Binding ButtonJumpClickedCommand}" />
        </DockPanel>
        <DockPanel Margin="20" LastChildFill="False" DockPanel.Dock="Bottom">
            <Button x:Name="ButtonDeleteSettings" Content="設定削除 (_D)" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="フォルダー設定を削除" Width="140" Command="{Binding ButtonDeleteSettingsClickedCommand}"/>
            <Button x:Name="ButtonCancel" Content="キャンセル" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="100" IsCancel="True" DockPanel.Dock="Right" Padding="4"/>
            <Button x:Name="ButtonOK" Content="OK" Margin="0,0,20,0" Height="Auto" Width="100" IsDefault="True" DockPanel.Dock="Right" Command="{Binding ButtonOKClickedCommand}"/>
        </DockPanel>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,10,0,0" DockPanel.Dock="Bottom"/>
        <CheckBox x:Name="CheckBoxExclude" Content="このフォルダーを検索対象としない (_X)" Margin="20,10,0,0" DockPanel.Dock="Bottom" IsChecked="{Binding IsExcluded}"/>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,10,0,0" DockPanel.Dock="Bottom"/>
        <DataGrid x:Name="DataGridPreview" AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" IsReadOnly="True" SelectionMode="Single" Margin="20,10,20,0" 
                  materialDesign:DataGridAssist.ColumnHeaderPadding="3 5 3 5" materialDesign:DataGridAssist.CellPadding="3" DockPanel.Dock="Top" ItemsSource="{Binding PreviewInfos}" 
                  IsEnabled="{Binding IsExcluded, Converter={StaticResource BooleanInvertConverter}}">
            <behaviors:Interaction.Behaviors>
                <sb:DataGridBindingSupportBehavior SelectedItem="{Binding SelectedPreviewInfo}" SortingCommand="{Binding DataGridPreviewSortingCommand}" />
            </behaviors:Interaction.Behaviors>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ファイル" Width="250" Binding="{Binding FileName}" />
                <DataGridTextColumn Header="項目と値" Width="*" Binding="{Binding Items}" />
                <DataGridTextColumn Header="更新日" Width="80" Binding="{Binding LastWriteTimeText}" />
                <DataGridTextColumn Header="サブフォルダー" Width="40" Binding="{Binding SubFolder}" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</Window>