<Window x:Class="YukaLister.Views.MiscWindows.FindKeywordWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:msm="clr-namespace:YukaLister.Models.SharedMisc"
        xmlns:s="clr-namespace:Shinta"
        xmlns:sb="clr-namespace:Shinta.Behaviors"
        xmlns:v="clr-namespace:YukaLister.Views"
        xmlns:vm="clr-namespace:YukaLister.ViewModels"
        xmlns:vmmw="clr-namespace:YukaLister.ViewModels.MiscWindowViewModels"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" WindowStyle="ToolWindow" ResizeMode="NoResize" ShowInTaskbar="False" Topmost="True" SizeToContent="WidthAndHeight" >

    <Window.DataContext>
        <vmmw:FindKeywordWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsActive="{Binding IsActive}" IsCascade="True" MinimizeBox="False"/>
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_WINDOW_ACTIVATE}" Messenger="{Binding Messenger}">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Activate"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_WINDOW_CLOSE}" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <TextBox Name="TextBoxKeyword" ToolTip="ここに検索したいキーワードを入力して下さい。" ToolTipService.ShowDuration="{x:Static msm:YlConstants.TOOL_TIP_LONG_DURATION}" materialDesign:HintAssist.Hint="{Binding ElementName=TextBoxKeyword, Path=ToolTip}" Margin="20,20,20,0" Width="400" Text="{Binding Keyword, UpdateSourceTrigger=PropertyChanged}" sb:IsFocusedAttachedBehavior.IsFocused="{Binding IsKeywordFocused}" >
            <behaviors:Interaction.Behaviors>
                <l:TextBoxBindingSupportBehavior SelectedText="{Binding SelectedKeyword}" />
            </behaviors:Interaction.Behaviors>
        </TextBox>
        <CheckBox Content="大文字と小文字を区別する (_I)" Margin="20,10,20,0" IsChecked="{Binding CaseSensitive}"/>
        <CheckBox Content="セルの内容全体が一致するものを検索する (_W)" Margin="20,10,20,0" IsChecked="{Binding WholeMatch}"/>
        <DockPanel Margin="20">
            <Button Content="前を検索 (_P)" Width="120" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" Command="{Binding ButtonFindClickedCommand}" CommandParameter="{x:Static msm:YlConstants.FIND_DIRECTION_BACKWARD}"/>
            <Button Content="次を検索 (_N)" Margin="20,0,0,0" Width="120" Height="Auto" IsDefault="True" Command="{Binding ButtonFindClickedCommand}"/>
            <Button Content="閉じる (_C)" HorizontalAlignment="Right" Width="100" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" IsCancel="True" Command="{Binding ButtonCancelClickedCommand}" />
        </DockPanel>
    </StackPanel>

</Window>