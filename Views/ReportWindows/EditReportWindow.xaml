<Window x:Class="YukaLister.Views.ReportWindows.EditReportWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:msm="clr-namespace:YukaLister.Models.SharedMisc"
        xmlns:s="clr-namespace:Shinta"
        xmlns:sb="clr-namespace:Shinta.Wpf.Behaviors"
        xmlns:v="clr-namespace:YukaLister.Views"
        xmlns:vm="clr-namespace:YukaLister.ViewModels"
        xmlns:vmrwvm="clr-namespace:YukaLister.ViewModels.ReportWindowViewModels"
        xmlns:vmw="clr-namespace:YukaLister.Views.MiscWindows"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" SizeToContent="WidthAndHeight" ResizeMode="NoResize" ShowInTaskbar="False" >

    <Window.DataContext>
        <vmrwvm:EditReportWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsCascade="True" HelpBox="True" HelpBoxClickedCommand="{Binding HelpClickedCommand}" HelpBoxClickedCommandParameter="HoukokusaretamondaihenoTaiou" />
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_WINDOW_CLOSE}" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_EDIT_MUSIC_INFO_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vmw:EditMusicInfoWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_FOLDER_SETTINGS_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vmw:FolderSettingsWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <StackPanel Margin="20,15,20,0" Orientation="Horizontal">
            <Label Content="ファイル名：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding Report.FileName}" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="フォルダー：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding Folder}" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="問題項目：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding Report.AdjustKeyName}" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="誤：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding Report.BadValue}" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="正：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding Report.AdjustValue}" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="報告者コメント：" Width="100" HorizontalContentAlignment="Right" />
            <TextBox Text="{Binding Report.ReporterComment}" Width="500" Height="50" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" IsReadOnly="True" TextWrapping="Wrap" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="報告者名：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding Report.By}" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="報告日時：" Width="100" HorizontalContentAlignment="Right" />
            <Label Content="{Binding RegistTimeString}" />
        </StackPanel>
        <DockPanel Margin="0,5,0,0">
            <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0"/>
        </DockPanel>
        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Margin="0,20,20,20">
            <Button Content="(フォルダー設定 (_F" Margin="0" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="140" Padding="4" Command="{Binding ButtonFolderSettingsClickedCommand}"/>
            <Button Content="(名称の編集 (_E" Margin="20,0,0,0" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="140" Padding="4" Command="{Binding ButtonEditMusicInfoClickedCommand}" />
        </StackPanel>
        <DockPanel Margin="0,5,0,0">
            <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0"/>
        </DockPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="対応コメント (_C)：" Target="{Binding ElementName=TextBoxStatusComment}" Width="100" HorizontalContentAlignment="Right" />
            <TextBox Name="TextBoxStatusComment" Text="{Binding StatusComment}" Width="500" Height="75" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top" TextWrapping="Wrap" AcceptsReturn="True" />
        </StackPanel>
        <StackPanel Margin="20,5,20,0" Orientation="Horizontal">
            <Label Content="対応状況 (_S)：" Target="{Binding ElementName=ComboBoxStatusStrings}" Width="100" HorizontalContentAlignment="Right" />
            <ComboBox Name="ComboBoxStatusStrings" ItemsSource="{Binding StatusStrings}" SelectedItem="{Binding SelectedStatusString}" materialDesign:ComboBoxAssist.ClassicMode="True" materialDesign:ComboBoxAssist.ShowSelectedItem="True" />
        </StackPanel>
        <DockPanel Margin="0,5,0,0">
            <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" VerticalAlignment="Center" Margin="0"/>
        </DockPanel>
        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Margin="0,20,20,20">
            <Button Content="キャンセル" Margin="0" Height="Auto" Style="{StaticResource MaterialDesignRaisedLightButton}" IsCancel="True" Width="100" Padding="4" />
            <Button Content="_OK" Margin="20,0,0,0" Height="Auto" IsDefault="True" Width="100" Command="{Binding ButtonOkClickedCommand}" sb:IsFocusedAttachedBehavior.IsFocused="{Binding IsButtonOkFocused}"/>
        </StackPanel>
    </StackPanel>

</Window>