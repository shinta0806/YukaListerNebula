<Window x:Class="YukaLister.Views.ViewMastersWindows.ViewMastersWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:msm="clr-namespace:YukaLister.Models.SharedMisc"
        xmlns:sb="clr-namespace:Shinta.Behaviors"
        xmlns:v="clr-namespace:YukaLister.Views"
        xmlns:vemw="clr-namespace:YukaLister.Views.EditMasterWindows"
        xmlns:vm="clr-namespace:YukaLister.ViewModels"
        xmlns:vmvmwvm="clr-namespace:YukaLister.ViewModels.ViewMastersWindowViewModels"
        xmlns:vsmw="clr-namespace:YukaLister.Views.SearchMasterWindows"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" Height="600" Width="1000" ResizeMode="CanResizeWithGrip" ShowInTaskbar="False" >

    <Window.DataContext>
        <vmvmwvm:ViewMastersWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <sb:WindowBindingSupportBehavior IsCascade="True" MinimizeBox="False"/>
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_EDIT_MASTER_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vemw:EditMasterWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_EDIT_TIE_UP_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vemw:EditTieUpWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_SEARCH_MASTER_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vsmw:SearchMasterWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="20,10,20,0">
            <Label Content="{Binding Description}"/>
            <Label >
                <Hyperlink Command="{Binding HelpClickedCommand}" CommandParameter="" >
                    <TextBlock Text="詳細情報" />
                </Hyperlink>
            </Label>
        </StackPanel>
        <DockPanel DockPanel.Dock="Bottom" Margin="20,0,20,20" LastChildFill="False">
            <Button Content="検索 (_E)" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="120" Height="Auto" Command="{Binding ButtonSearchMasterClickedCommand}" />
            <Button Content="編集 (_E)" Width="120" Height="Auto" Command="{Binding ButtonEditMasterClickedCommand}" Margin="20,0,0,0" />
            <Button Content="新規作成 (_E)" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="120" Height="Auto" Command="{Binding ButtonNewMasterClickedCommand}" Margin="20,0,0,0" />
            <Button Content="閉じる (_C)" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="100" Height="Auto" IsCancel="True" DockPanel.Dock="Right" />
        </DockPanel>
        <DataGrid Margin="20,10,20,20" AutoGenerateColumns="False" CanUserReorderColumns="False" SelectionMode="Single" IsReadOnly="True" DockPanel.Dock="Top" 
                  ItemsSource="{Binding Masters}" 
                  materialDesign:DataGridAssist.ColumnHeaderPadding="3 5 3 5" materialDesign:DataGridAssist.CellPadding="3" >
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DataGridDoubleClickedCommand}" />
            </DataGrid.InputBindings>
            <behaviors:Interaction.Behaviors>
                <sb:DataGridBindingSupportBehavior Columns="{Binding Columns}" SelectedItem="{Binding SelectedMaster}" />
            </behaviors:Interaction.Behaviors>
        </DataGrid>

    </DockPanel>
</Window>