<Window x:Class="YukaLister.Views.EditMasterWindows.EditTieUpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:msm="clr-namespace:YukaLister.Models.SharedMisc"
        xmlns:s="clr-namespace:Shinta"
        xmlns:swb="clr-namespace:Shinta.Wpf.Behaviors"
        xmlns:v="clr-namespace:YukaLister.Views"
        xmlns:vm="clr-namespace:YukaLister.ViewModels"
        xmlns:vmemw="clr-namespace:YukaLister.ViewModels.EditMasterWindowViewModels"
        xmlns:vem="clr-namespace:YukaLister.Views.EditMasterWindows"
        xmlns:ves="clr-namespace:YukaLister.Views.EditSequenceWindows"
        xmlns:vmw="clr-namespace:YukaLister.Views.MiscWindows"
        xmlns:vsm="clr-namespace:YukaLister.Views.SearchMasterWindows"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Title}" SizeToContent="WidthAndHeight" ResizeMode="NoResize" ShowInTaskbar="False" >

    <Window.DataContext>
        <vmemw:EditTieUpWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Behaviors>
        <swb:WindowBindingSupportBehavior IsCascade="True" HelpBox="True" HelpBoxClickedCommand="{Binding HelpClickedCommand}" HelpBoxClickedCommandParameter="{Binding HelpCommandParameter}" />
    </behaviors:Interaction.Behaviors>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

        <l:InteractionMessageTrigger MessageKey="{x:Static s:Common.MESSAGE_KEY_WINDOW_CLOSE}" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_EDIT_MASTER_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vem:EditMasterWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_EDIT_SEQUENCE_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type ves:EditSequenceWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_INPUT_ID_PREFIX_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vmw:InputIdPrefixWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="{x:Static msm:YlConstants.MESSAGE_KEY_OPEN_SEARCH_MASTER_WINDOW}" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type vsm:SearchMasterWindow}" Mode="Modal" IsOwned="True" InvokeActionOnlyWhenWindowIsActive="False" />
        </l:InteractionMessageTrigger>

    </behaviors:Interaction.Triggers>

    <StackPanel>
        <StackPanel Margin="20,20,20,0" Orientation="Horizontal">
            <Label Content="タイアップ ID (_I)：" Target="{Binding ElementName=ComboBoxId}" Width="100" HorizontalContentAlignment="Right" VerticalAlignment="Center"/>
            <ComboBox Name="ComboBoxId" ItemsSource="{Binding Masters}" SelectedItem="{Binding SelectedMaster}" DisplayMemberPath="Id" VerticalAlignment="Center" Width="300" materialDesign:ComboBoxAssist.ClassicMode="True" materialDesign:ComboBoxAssist.ShowSelectedItem="True" />
            <Label Content="{Binding IdInfo}" Margin="10,0,0,0" Foreground="Red"/>
        </StackPanel>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,20,0,0"/>
        <Grid Margin="0,20,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="130"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Label Content="フリガナ (_F)：" Target="{Binding ElementName=TextBoxRuby}" Margin="0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Name="TextBoxRuby" Text="{Binding Ruby}" Grid.Column="1" Margin="0" Grid.Row="0" VerticalAlignment="Center"/>
            <Label Content="タイアップ名 (_N)：" Target="{Binding ElementName=TextBoxName}" Margin="0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Name="TextBoxName" Text="{Binding Name}" Grid.Column="1" Margin="0" Grid.Row="1" VerticalAlignment="Center"/>
            <Label Content="制作会社あり (_K)：" Target="{Binding ElementName=CheckBoxHasMaker}" Margin="0" Grid.Row="0" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <CheckBox Name="CheckBoxHasMaker" IsChecked="{Binding HasMaker}" Grid.Row="0" Grid.Column="4" />
            <Button Content="検索 (_3)" Grid.Row="0" Grid.Column="5" Height="Auto" FontSize="12" Padding="2" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5" Command="{Binding ButtonSearchMakerClickedCommand}" />
            <Label Content="{Binding MakerDisplayName}" Margin="0" Grid.Row="0" Grid.Column="6" VerticalAlignment="Center"/>
            <Button Content="制作会社詳細編集 (_M)" Grid.Row="0" Grid.Column="7" Height="Auto" FontSize="12" Padding="2" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5,5,0,5" Command="{Binding ButtonEditMakerClickedCommand}"/>
            <Label Content="シリーズあり (_E)：" Target="{Binding ElementName=CheckBoxHasTieUpGroup}" Margin="0" Grid.Row="2" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <CheckBox Name="CheckBoxHasTieUpGroup" IsChecked="{Binding HasTieUpGroup}" Grid.Row="2" Grid.Column="4" Height="30" VerticalAlignment="Top" />
            <Button Content="検索 (_4)" Grid.Row="2" Grid.Column="5" Height="Auto" FontSize="12" Padding="2" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5" Command="{Binding ButtonSearchTieUpGroupClickedCommand}"/>
            <Label Content="{Binding TieUpGroupDisplayNames}" Margin="0" Grid.Row="2" Grid.Column="6" VerticalAlignment="Center"/>
            <Button Content="複数シリーズ検索 (_S)" Grid.Row="2" Grid.Column="7" Height="Auto" FontSize="12" Padding="2" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5,5,0,5" Command="{Binding ButtonEditTieUpGroupClickedCommand}" />
        </Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="135"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="245"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Label Content="カテゴリーあり (_C)：" Target="{Binding ElementName=CheckBoxHasCategory}" Margin="0" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <CheckBox Name="CheckBoxHasCategory" IsChecked="{Binding HasCategory}" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Width="20"/>
            <Button Name="ButtonSelectCategory" Content="選択 (_1)" Grid.Row="0" Grid.Column="2" Height="Auto" FontSize="12" Padding="2" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5" Command="{Binding ButtonSelectCategoryClickedCommand}" >
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="Click">
                        <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=ButtonSelectCategory}" PropertyName="IsOpen" Value="True"/>
                        <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=ButtonSelectCategory}" PropertyName="PlacementTarget" Value="{Binding ElementName=ButtonSelectCategory, Mode=OneWay}"/>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <Button.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuButtonSelectCategoryItems}" >
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Label Content="{Binding CategoryName}" Tag="{Binding CategoryId}" Margin="0" Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2" VerticalAlignment="Center"/>
            <Label Content="年齢制限 (_A)：" Target="{Binding ElementName=TextBoxAgeLimit}" Margin="0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <Button Name="ButtonSelectAgeLimit" Content="選択 (_2)" Grid.Row="1" Grid.Column="2" Height="Auto" FontSize="12" Padding="2" Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="5" >
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="Click">
                        <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=ButtonSelectAgeLimit}" PropertyName="IsOpen" Value="True"/>
                        <behaviors:ChangePropertyAction TargetObject="{Binding ContextMenu, ElementName=ButtonSelectAgeLimit}" PropertyName="PlacementTarget" Value="{Binding ElementName=ButtonSelectAgeLimit, Mode=OneWay}"/>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
                <Button.ContextMenu>
                    <ContextMenu ItemsSource="{Binding ContextMenuButtonSelectAgeLimitItems}" >
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <TextBox Name="TextBoxAgeLimit" Text="{Binding AgeLimit}" Grid.Column="3" Margin="0" Grid.Row="1" VerticalAlignment="Center" HorizontalContentAlignment="Right"/>
            <Label Content="才以上対象" Margin="0" Grid.Row="1" Grid.Column="4" VerticalAlignment="Center"/>
            <Label Content="リリース日 (_R)：" Target="{Binding ElementName=DatePickerReleaseDate}" Margin="0" Grid.Row="1" Grid.Column="6" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <DatePicker Name="DatePickerReleaseDate" SelectedDate="{Binding ReleaseDate}" Language="ja-JP" ToolTip="yyyy/mm/dd" ToolTipService.ShowDuration="{x:Static msm:YlConstants.TOOL_TIP_LONG_DURATION}" materialDesign:HintAssist.Hint="{Binding ElementName=DatePickerReleaseDate, Path=ToolTip}" Grid.Row="1" Grid.Column="7" />
            <Label Content="{Binding DayOfWeek}" Grid.Row="1" Grid.Column="8" VerticalAlignment="Center" />
            <Label Content="検索ワード (_W)：" Target="{Binding ElementName=TextBoxKeyword}" Margin="0" Grid.Row="2" Grid.Column="6" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Name="TextBoxKeyword" Text="{Binding Keyword}" ToolTip="{Binding KeywordHint}" ToolTipService.ShowDuration="{x:Static msm:YlConstants.TOOL_TIP_LONG_DURATION}" materialDesign:HintAssist.Hint="{Binding ElementName=TextBoxKeyword, Path=ToolTip}" Grid.Column="7" Margin="0" Grid.Row="2" VerticalAlignment="Center" Grid.ColumnSpan="3" />
        </Grid>
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="3" Margin="0,20,0,0"/>
        <DockPanel Margin="20" LastChildFill="False" >
            <Button Content="削除 (_D)" Style="{StaticResource MaterialDesignRaisedLightButton}" Width="100" Height="Auto" Padding="4" Command="{Binding ButtonDeleteClickedCommand}" />
            <Button Content="キャンセル" Style="{StaticResource MaterialDesignRaisedLightButton}" IsCancel="True" Width="100" Height="Auto" Padding="4" DockPanel.Dock="Right"/>
            <Button Content="_OK" Height="Auto" IsDefault="True" Width="100" Command="{Binding ButtonOkClickedCommand}" swb:IsFocusedAttachedBehavior.IsFocused="{Binding IsButtonOkFocused}" DockPanel.Dock="Right" Margin="0,0,20,0" />
        </DockPanel>
    </StackPanel>

</Window>